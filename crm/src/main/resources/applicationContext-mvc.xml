<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- dispatcherServlet截获所有URL请求
        在springMVC-servlet.xml中配置<mvc:default-servlet-handler />后，
        会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
        它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，
        就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。
     -->
    <mvc:default-servlet-handler />

    <!-- spring mvc 扫描包下的controller
        通常情况下我们在创建spring项目的时候在xml配置文件中都会配置这个标签，配置完这个标签后，
        spring就会去自动扫描base-package对应的路径或者该路径的子包下面的java文件，
        如果扫描到文件中带有@Service,@Component,@Repository,@Controller等这些注解的类，
        则把这些类注册为bean
    -->
    <context:component-scan base-package="com.bjpowernode.crm.web.controller,
    com.bjpowernode.crm.settings.controller,com.bjpowernode.crm.workbench.controller"/>

    <!-- 配置注解驱动
        <context:component-scan/>标签是告诉Spring 来扫描指定包下的类，
        并注册被@Component，@Controller，@Service，@Repository等注解标记的组件。
        而<mvc:annotation-driven/>是告知Spring，我们启用注解驱动。然后Spring会自动
        为我们注册上面说到的几个Bean到工厂中，来处理我们的请求。
    -->
    <mvc:annotation-driven/>

    <!-- 配置视图解析器 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!-- 配置文件上传解析器 id:必须是multipartResolver-->
    <!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="#{1024*1024*80}"/>
        <property name="defaultEncoding" value="utf-8"/>
    </bean>-->
</beans>